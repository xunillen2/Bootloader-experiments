#!/bin/sh

echo "Compiling FAT12 driver..."
as -o fat12.o fat12.s

echo "Compiling first stage bootloader..."
as -o boot_firststage.o boot.s
ld.bfd --oformat binary -o boot_firststage.img -T linker.ld boot_firststage.o fat12.o

if [ -e boot_firststage.img ]
then
	echo "First stage bootloder compilation OK"
else
        echo "First stage bootloder compilation FAILED"
	exit 0
fi
echo -e "\n\nobjdump output - First stage bootloader"
echo "####################"
objdump -D -b binary -m i8086 boot_firststage.img

echo "Compiling second stage bootloader..."
as -o boot_secondstage.o boot2.s
ld.bfd --oformat binary -o boot_secondstage.img -T linker-2nd.ld boot_secondstage.o fat12.o

if [ -e boot_secondstage.img ]
then
        echo "Second stage bootloder compilation OK"
else
        echo "Second stage bootloder compilation FAILED"
        exit 0
fi

echo -e "\n\nobjdump output - Second stage bootloader"
echo "####################"
objdump -D -b binary -m i8086 boot_secondstage.img

echo -e "\nCompile successful."
echo -e "\n\nCreating Disk image..."
rm boot_fin.img
dd if=/dev/zero of=boot_fin.img bs=512 count=2880
dd if=boot_firststage.img of=boot_fin.img bs=512 count=1 conv=notrunc
#dd if=boot_secondstage.img of=boot_fin.img bs=512 seek=1

echo -e "\n\hexdump output - Full image"
echo "####################"
hexdump -C boot_fin.img

sleep 0.1
if [[ $1 = "d" ]]; then
	echo "Starting qemu"
	echo -e "\nNOTE: Qemu started in Debug mode, vm execution is paused.\n"
	qemu-system-i386 -m 32M -fda boot_fin.img -bios bios.bin -s -S
elif [[ $1 = "w" ]]; then
	echo -e "\nWriting image to USB (/dev/sda - unsafe. do not use)"
	sudo dd if=boot_fin.img of=/dev/sda
else
	echo "Starting qemu."
	qemu-system-i386 -m 32M -fda boot_fin.img -bios bios.bin
fi

